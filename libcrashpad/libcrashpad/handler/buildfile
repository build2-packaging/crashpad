import intf_libs += mini_chromium%lib{mini_chromium}

include ../client/
include ../snapshot/
include ../util/
include ../minidump/
include ../tools/
include ../build/

intf_libs += ../build/lib{crashpad_build}
intf_libs += ../util/lib{crashpad_util}
impl_libs += ../util/lib{crashpad_net}
impl_libs += ../client/lib{crashpad_client_common}
impl_libs += ../snapshot/lib{crashpad_snapshot}

handler_intf_libs += ../client/lib{crashpad_client}
handler_impl_libs += lib{crashpad_handler_common}
handler_impl_libs += ../minidump/lib{crashpad_minidump}
handler_impl_libs += ../tools/lib{crashpad_tool_support}

libcommon_common_headers =  crash_report_upload_thread \
                            minidump_to_upload_parameters
   
libcommon_common_source =   crash_report_upload_thread \
                            minidump_to_upload_parameters

libcommon_macos_headers =   mac/file_limit_annotation

libcommon_macos_source =    mac/file_limit_annotation

libhandler_common_headers = handler_main \
                            prune_crash_reports_thread \
                            user_stream_data_source

libhandler_common_source =  handler_main \
                            prune_crash_reports_thread \
                            user_stream_data_source

libhandler_linux_header =   linux/capture_snapshot \
                            linux/crash_report_exception_handler \
                            linux/exception_handler_server \
                            linux/cros_crash_report_exception_handler

libhandler_linux_source =   linux/capture_snapshot \
                            linux/crash_report_exception_handler \
                            linux/exception_handler_server \
                            linux/cros_crash_report_exception_handler

libhandler_macos_header =   mac/exception_handler_server \
                            mac/crash_report_exception_handler

libhandler_macos_source =   mac/exception_handler_server \
                            mac/crash_report_exception_handler

libhandler_win_header =     win/crash_report_exception_handler

libhandler_win_source =     win/crash_report_exception_handler

include ../third_party/getopt/

./: lib{crashpad_handler} lib{crashpad_handler_common}

lib{crashpad_handler_common}: {hxx}{$libcommon_common_headers} {cxx}{$libcommon_common_source}
lib{crashpad_handler_common}: {hxx}{$libcommon_macos_headers} {cxx}{$libcommon_macos_source}: include = ($cxx.target.class == 'macos')
lib{crashpad_handler_common}: $impl_libs $intf_libs

lib{crashpad_handler}: {hxx}{$libhandler_common_headers} {cxx}{$libhandler_common_source}
lib{crashpad_handler}: {hxx}{$libhandler_linux_header} {cxx}{$libhandler_linux_source}: include = ($cxx.target.class == 'linux')
lib{crashpad_handler}: {hxx}{$libhandler_macos_header} {cxx}{$libhandler_macos_source}: include = ($cxx.target.class == 'macos')
lib{crashpad_handler}: {hxx}{$libhandler_win_header} {cxx}{$libhandler_win_source} ../third_party/getopt/lib{crashpad_getopt}: include = ($cxx.target.class == 'windows')
lib{crashpad_handler}: $impl_libs $intf_libs $handler_intf_libs $handler_impl_libs

# Build options.
cxx.poptions =+ "-I$src_root"/libcrashpad

# libhandler export options.
lib{crashpad_handler_common}:
{
  cxx.export.poptions = "-I$src_root"/libcrashpad
  cxx.export.libs = $intf_libs
}

# libhandler export options.
lib{crashpad_handler}:
{
  cxx.export.poptions = "-I$src_root"/libcrashpad
  cxx.export.libs = $intf_libs $handler_intf_libs
}

# Install into the crashpad/ subdirectory of, say, /usr/include/
# recreating subdirectories.
{hxx ixx txx}{*}:
{
  install         = include/crashpad/handler/
  install.subdirs = true
}

lib{crashpad_handler}: cxx.pkgconfig.include = include/crashpad/
